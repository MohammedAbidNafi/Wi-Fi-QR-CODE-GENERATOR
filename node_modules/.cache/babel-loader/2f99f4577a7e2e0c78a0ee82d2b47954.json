{"ast":null,"code":"var _jsxFileName = \"E:\\\\WebProjects\\\\wifi-card\\\\src\\\\components\\\\Card.js\",\n    _s = $RefreshSig$();\n\nimport QRCode from 'qrcode.react';\nimport { useEffect, useRef, useState } from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Card = () => {\n  _s();\n\n  const firstLoad = useRef(true);\n  const [qrvalue, setQrvalue] = useState('');\n  const [network, setNetwork] = useState({\n    ssid: '',\n    encryptionMode: 'WPA',\n    password: '',\n    hidePassword: false\n  });\n  const [portrait, setPortrait] = useState(false);\n\n  const escape = v => {\n    const needsEscape = ['\"', ';', ',', ':', '\\\\'];\n    let escaped = '';\n\n    for (let i = 0; i < v.length; i++) {\n      let c = v[i];\n\n      if (needsEscape.includes(c)) {\n        c = '\\\\' + c;\n      }\n\n      escaped += c;\n    }\n\n    return escaped;\n  };\n\n  const onPrint = () => {\n    if (network.ssid.length > 0) {\n      if (network.password.length < 8 && network.encryptionMode === 'WPA') {\n        alert('Password must be at least 8 characters');\n      } else if (network.password.length < 5 && network.encryptionMode === 'WEP') {\n        alert('Password must be at least 5 characters');\n      } else {\n        window.print();\n      }\n    } else {\n      alert('Network name cannot be empty');\n    }\n  };\n\n  useEffect(() => {\n    if (firstLoad.current && window.innerWidth < 500) {\n      firstLoad.current = false;\n      setPortrait(true);\n    }\n\n    const ssid = escape(network.ssid);\n    const password = escape(network.password);\n    setQrvalue(`WIFI:T:${network.encryptionMode};S:${ssid};P:${password};;`);\n  }, [network]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n      id: \"print-area\",\n      style: {\n        maxWidth: portrait ? '350px' : '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: portrait ? 'center' : 'left'\n        },\n        children: \"WiFi Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details\",\n        style: {\n          flexDirection: portrait ? 'column' : 'row'\n        },\n        children: [/*#__PURE__*/_jsxDEV(QRCode, {\n          className: \"qrcode\",\n          style: {\n            paddingRight: portrait ? '' : '1em'\n          },\n          value: qrvalue,\n          size: 175\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Network name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"ssid\",\n            type: \"text\",\n            maxLength: \"32\",\n            placeholder: \"WiFi Network name\",\n            autoComplete: \"off\",\n            autoCorrect: \"off\",\n            autoCapitalize: \"none\",\n            spellCheck: \"false\",\n            value: network.ssid,\n            onChange: e => setNetwork({ ...network,\n              ssid: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: network.hidePassword ? 'no-print' : '',\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"password\",\n            type: \"text\",\n            className: network.hidePassword ? 'no-print' : '',\n            style: {\n              height: portrait && network.password.length > 40 ? '5em' : 'auto'\n            },\n            maxLength: \"63\",\n            placeholder: \"Password\",\n            autoComplete: \"off\",\n            autoCorrect: \"off\",\n            autoCapitalize: \"none\",\n            spellCheck: \"false\",\n            value: network.password,\n            onChange: e => {\n              setNetwork({ ...network,\n                password: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-print\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"hide-password-checkbox\",\n              onChange: () => setNetwork({ ...network,\n                hidePassword: !network.hidePassword\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"hide-password-checkbox\",\n              children: \"Hide password field before printing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-print\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Encryption:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"encrypt-select\",\n              id: \"encrypt-none\",\n              value: \"nopass\",\n              onChange: e => {\n                setNetwork({ ...network,\n                  encryptionMode: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"encrypt-none\",\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"encrypt-select\",\n              id: \"encrypt-wpa-wpa2\",\n              value: \"WPA\",\n              onChange: e => setNetwork({ ...network,\n                encryptionMode: e.target.value\n              }),\n              defaultChecked: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"encrypt-wpa-wpa2\",\n              children: \"WPA/WPA2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"encrypt-select\",\n              id: \"encrypt-wep\",\n              value: \"WEP\",\n              onChange: e => setNetwork({ ...network,\n                encryptionMode: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"encrypt-wep\",\n              children: \"WEP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"mobile-phone\",\n          children: \"\\uD83D\\uDCF8\\uD83D\\uDCF1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), \"Point your phone's camera at the QR Code to connect automatically\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"rotate\",\n        onClick: () => setPortrait(!portrait),\n        children: \"Rotate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"print\",\n        onClick: onPrint,\n        children: \"Print\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Card, \"A9gkp7Ibwjv2ZItaFtr+gdpUDXg=\");\n\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["E:/WebProjects/wifi-card/src/components/Card.js"],"names":["QRCode","useEffect","useRef","useState","Card","firstLoad","qrvalue","setQrvalue","network","setNetwork","ssid","encryptionMode","password","hidePassword","portrait","setPortrait","escape","v","needsEscape","escaped","i","length","c","includes","onPrint","alert","window","print","current","innerWidth","maxWidth","textAlign","flexDirection","paddingRight","e","target","value","height"],"mappings":"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","sourcesContent":["import QRCode from 'qrcode.react';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport './style.css';\r\n\r\nexport const Card = () => {\r\n  const firstLoad = useRef(true);\r\n  const [qrvalue, setQrvalue] = useState('');\r\n  const [network, setNetwork] = useState({\r\n    ssid: '',\r\n    encryptionMode: 'WPA',\r\n    password: '',\r\n    hidePassword: false,\r\n  });\r\n  const [portrait, setPortrait] = useState(false);\r\n\r\n  const escape = (v) => {\r\n    const needsEscape = ['\"', ';', ',', ':', '\\\\'];\r\n\r\n    let escaped = '';\r\n    for (let i = 0; i < v.length; i++) {\r\n      let c = v[i];\r\n      if (needsEscape.includes(c)) {\r\n        c = '\\\\' + c;\r\n      }\r\n      escaped += c;\r\n    }\r\n\r\n    return escaped;\r\n  };\r\n\r\n  const onPrint = () => {\r\n    if (network.ssid.length > 0) {\r\n      if (network.password.length < 8 && network.encryptionMode === 'WPA') {\r\n        alert('Password must be at least 8 characters');\r\n      } else if (\r\n        network.password.length < 5 &&\r\n        network.encryptionMode === 'WEP'\r\n      ) {\r\n        alert('Password must be at least 5 characters');\r\n      } else {\r\n        window.print();\r\n      }\r\n    } else {\r\n      alert('Network name cannot be empty');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstLoad.current && window.innerWidth < 500) {\r\n      firstLoad.current = false;\r\n      setPortrait(true);\r\n    }\r\n\r\n    const ssid = escape(network.ssid);\r\n    const password = escape(network.password);\r\n    setQrvalue(`WIFI:T:${network.encryptionMode};S:${ssid};P:${password};;`);\r\n  }, [network]);\r\n\r\n  return (\r\n    <div>\r\n      <fieldset\r\n        id=\"print-area\"\r\n        style={{ maxWidth: portrait ? '350px' : '100%' }}\r\n      >\r\n        <h1 style={{ textAlign: portrait ? 'center' : 'left' }}>WiFi Login</h1>\r\n\r\n        <div\r\n          className=\"details\"\r\n          style={{ flexDirection: portrait ? 'column' : 'row' }}\r\n        >\r\n          <QRCode\r\n            className=\"qrcode\"\r\n            style={{ paddingRight: portrait ? '' : '1em' }}\r\n            value={qrvalue}\r\n            size={175}\r\n          />\r\n\r\n          <div className=\"inputs\">\r\n            <label>Network name</label>\r\n            <textarea\r\n              id=\"ssid\"\r\n              type=\"text\"\r\n              maxLength=\"32\"\r\n              placeholder=\"WiFi Network name\"\r\n              autoComplete=\"off\"\r\n              autoCorrect=\"off\"\r\n              autoCapitalize=\"none\"\r\n              spellCheck=\"false\"\r\n              value={network.ssid}\r\n              onChange={(e) => setNetwork({ ...network, ssid: e.target.value })}\r\n            />\r\n            <label className={network.hidePassword ? 'no-print' : ''}>\r\n              Password\r\n            </label>\r\n            <textarea\r\n              id=\"password\"\r\n              type=\"text\"\r\n              className={network.hidePassword ? 'no-print' : ''}\r\n              style={{\r\n                height:\r\n                  portrait && network.password.length > 40 ? '5em' : 'auto',\r\n              }}\r\n              maxLength=\"63\"\r\n              placeholder=\"Password\"\r\n              autoComplete=\"off\"\r\n              autoCorrect=\"off\"\r\n              autoCapitalize=\"none\"\r\n              spellCheck=\"false\"\r\n              value={network.password}\r\n              onChange={(e) => {\r\n                setNetwork({ ...network, password: e.target.value });\r\n              }}\r\n            />\r\n\r\n            <div className=\"no-print\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"hide-password-checkbox\"\r\n                onChange={() =>\r\n                  setNetwork({\r\n                    ...network,\r\n                    hidePassword: !network.hidePassword,\r\n                  })\r\n                }\r\n              />\r\n              <label for=\"hide-password-checkbox\">\r\n                Hide password field before printing\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"no-print\">\r\n              <label>Encryption:</label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"encrypt-select\"\r\n                id=\"encrypt-none\"\r\n                value=\"nopass\"\r\n                onChange={(e) => {\r\n                  setNetwork({ ...network, encryptionMode: e.target.value });\r\n                }}\r\n              />\r\n              <label for=\"encrypt-none\">None</label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"encrypt-select\"\r\n                id=\"encrypt-wpa-wpa2\"\r\n                value=\"WPA\"\r\n                onChange={(e) =>\r\n                  setNetwork({ ...network, encryptionMode: e.target.value })\r\n                }\r\n                defaultChecked\r\n              />\r\n              <label for=\"encrypt-wpa-wpa2\">WPA/WPA2</label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"encrypt-select\"\r\n                id=\"encrypt-wep\"\r\n                value=\"WEP\"\r\n                onChange={(e) =>\r\n                  setNetwork({ ...network, encryptionMode: e.target.value })\r\n                }\r\n              />\r\n              <label for=\"encrypt-wep\">WEP</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <p>\r\n          <span role=\"img\" aria-label=\"mobile-phone\">\r\n            📸📱\r\n          </span>\r\n          Point your phone's camera at the QR Code to connect automatically\r\n        </p>\r\n      </fieldset>\r\n\r\n      <div className=\"buttons\">\r\n        <button id=\"rotate\" onClick={() => setPortrait(!portrait)}>\r\n          Rotate\r\n        </button>\r\n        <button id=\"print\" onClick={onPrint}>\r\n          Print\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}