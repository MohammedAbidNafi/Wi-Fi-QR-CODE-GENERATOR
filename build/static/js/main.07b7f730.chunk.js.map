{"version":3,"sources":["components/Card.js","images/wifi.png","App.js","index.js"],"names":["Card","firstLoad","useRef","useState","qrvalue","setQrvalue","ssid","encryptionMode","password","hidePassword","network","setNetwork","portrait","setPortrait","escape","v","needsEscape","escaped","i","length","c","includes","useEffect","current","window","innerWidth","id","style","maxWidth","textAlign","className","flexDirection","paddingRight","value","size","type","maxLength","placeholder","autoComplete","autoCorrect","autoCapitalize","spellCheck","onChange","e","target","height","for","name","defaultChecked","role","aria-label","onClick","alert","print","App","alt","src","logo","width","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07b7f730.chunk.js","sourcesContent":["import QRCode from 'qrcode.react';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport './style.css';\r\n\r\nexport const Card = () => {\r\n  const firstLoad = useRef(true);\r\n  const [qrvalue, setQrvalue] = useState('');\r\n  const [network, setNetwork] = useState({\r\n    ssid: '',\r\n    encryptionMode: 'WPA',\r\n    password: '',\r\n    hidePassword: false,\r\n  });\r\n  const [portrait, setPortrait] = useState(false);\r\n\r\n  const escape = (v) => {\r\n    const needsEscape = ['\"', ';', ',', ':', '\\\\'];\r\n\r\n    let escaped = '';\r\n    for (let i = 0; i < v.length; i++) {\r\n      let c = v[i];\r\n      if (needsEscape.includes(c)) {\r\n        c = '\\\\' + c;\r\n      }\r\n      escaped += c;\r\n    }\r\n\r\n    return escaped;\r\n  };\r\n\r\n  const onPrint = () => {\r\n    if (network.ssid.length > 0) {\r\n      if (network.password.length < 8 && network.encryptionMode === 'WPA') {\r\n        alert('Password must be at least 8 characters');\r\n      } else if (\r\n        network.password.length < 5 &&\r\n        network.encryptionMode === 'WEP'\r\n      ) {\r\n        alert('Password must be at least 5 characters');\r\n      } else {\r\n        window.print();\r\n      }\r\n    } else {\r\n      alert('Network name cannot be empty');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstLoad.current && window.innerWidth < 500) {\r\n      firstLoad.current = false;\r\n      setPortrait(true);\r\n    }\r\n\r\n    const ssid = escape(network.ssid);\r\n    const password = escape(network.password);\r\n    setQrvalue(`WIFI:T:${network.encryptionMode};S:${ssid};P:${password};;`);\r\n  }, [network]);\r\n\r\n  return (\r\n    <div>\r\n      <fieldset\r\n        id=\"print-area\"\r\n        style={{ maxWidth: portrait ? '350px' : '100%' }}\r\n      >\r\n        <h1 style={{ textAlign: portrait ? 'center' : 'left' }}>WiFi Login</h1>\r\n\r\n        <div\r\n          className=\"details\"\r\n          style={{ flexDirection: portrait ? 'column' : 'row' }}\r\n        >\r\n          <QRCode\r\n            className=\"qrcode\"\r\n            style={{ paddingRight: portrait ? '' : '1em' }}\r\n            value={qrvalue}\r\n            size={175}\r\n          />\r\n\r\n          <div className=\"inputs\">\r\n            <label>Network name</label>\r\n            <textarea\r\n              id=\"ssid\"\r\n              type=\"text\"\r\n              maxLength=\"32\"\r\n              placeholder=\"WiFi Network name\"\r\n              autoComplete=\"off\"\r\n              autoCorrect=\"off\"\r\n              autoCapitalize=\"none\"\r\n              spellCheck=\"false\"\r\n              value={network.ssid}\r\n              onChange={(e) => setNetwork({ ...network, ssid: e.target.value })}\r\n            />\r\n            <label className={network.hidePassword ? 'no-print' : ''}>\r\n              Password\r\n            </label>\r\n            <textarea\r\n              id=\"password\"\r\n              type=\"text\"\r\n              className={network.hidePassword ? 'no-print' : ''}\r\n              style={{\r\n                height:\r\n                  portrait && network.password.length > 40 ? '5em' : 'auto',\r\n              }}\r\n              maxLength=\"63\"\r\n              placeholder=\"Password\"\r\n              autoComplete=\"off\"\r\n              autoCorrect=\"off\"\r\n              autoCapitalize=\"none\"\r\n              spellCheck=\"false\"\r\n              value={network.password}\r\n              onChange={(e) => {\r\n                setNetwork({ ...network, password: e.target.value });\r\n              }}\r\n            />\r\n\r\n            <div className=\"no-print\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"hide-password-checkbox\"\r\n                onChange={() =>\r\n                  setNetwork({\r\n                    ...network,\r\n                    hidePassword: !network.hidePassword,\r\n                  })\r\n                }\r\n              />\r\n              <label for=\"hide-password-checkbox\">\r\n                Hide password field before printing\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"no-print\">\r\n              <label>Encryption:</label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"encrypt-select\"\r\n                id=\"encrypt-none\"\r\n                value=\"nopass\"\r\n                onChange={(e) => {\r\n                  setNetwork({ ...network, encryptionMode: e.target.value });\r\n                }}\r\n              />\r\n              <label for=\"encrypt-none\">None</label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"encrypt-select\"\r\n                id=\"encrypt-wpa-wpa2\"\r\n                value=\"WPA\"\r\n                onChange={(e) =>\r\n                  setNetwork({ ...network, encryptionMode: e.target.value })\r\n                }\r\n                defaultChecked\r\n              />\r\n              <label for=\"encrypt-wpa-wpa2\">WPA/WPA2</label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"encrypt-select\"\r\n                id=\"encrypt-wep\"\r\n                value=\"WEP\"\r\n                onChange={(e) =>\r\n                  setNetwork({ ...network, encryptionMode: e.target.value })\r\n                }\r\n              />\r\n              <label for=\"encrypt-wep\">WEP</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <p>\r\n          <span role=\"img\" aria-label=\"mobile-phone\">\r\n            ðŸ“¸ðŸ“±\r\n          </span>\r\n          Point your phone's camera at the QR Code to connect automatically\r\n        </p>\r\n      </fieldset>\r\n\r\n      <div className=\"buttons\">\r\n        <button id=\"rotate\" onClick={() => setPortrait(!portrait)}>\r\n          Rotate\r\n        </button>\r\n        <button id=\"print\" onClick={onPrint}>\r\n          Print\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/wifi.98ef7bb3.png\";","import React from 'react';\r\nimport { Card } from './components/Card';\r\nimport './style.css';\r\nimport logo from '../src/images/wifi.png';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>\r\n        <img alt=\"icon\" src={logo} width=\"32\" height=\"32\" />\r\n        &nbsp; WiFi QR code Genrator\r\n      </h1>\r\n\r\n      <p className=\"tag\">\r\n        After entering your Wi-Fi details\r\n        Print the card with your WiFi login details. Tape it to the wall,\r\n        or any place. Or tape it in your store for customers to connect.\r\n      </p>\r\n\r\n      <p className=\"tag\">\r\n        No information is sent to MargsWeb nor MargsGlobal. There is no tracking in this site\r\n        Hence the details you enter are completly safe. You can even view the{' '}\r\n        <a href=\"https://github.com/MohammedAbidNafi/wifi-card\">source code</a>.\r\n      </p>\r\n\r\n      <Card />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}